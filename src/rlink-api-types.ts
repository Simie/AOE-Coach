/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/community/external/proxysteamuserrequest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_proxy_steam_user_request"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/leaderboard/GetPersonalStat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_personal_stat"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/leaderboard/getRecentMatchHistory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_recent_match_history"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/advertisement/findAdvertisements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_find_advertisements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/leaderboard/GetAvatarStatForProfile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_avatar_stat_for_profile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/achievement/getAchievements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_achievements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/achievement/getAvailableAchievements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_available_achievements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/news/getNews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_news_get_news"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/clan/find": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_clan_find"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/clan/getClanInfoFull": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_clan_info_full"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/CommunityEvent/getAvailableCommunityEvents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_available_community_events"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/item/getInventoryByProfileIDs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_inventory_by_profile_ids"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/leaderboard/getAvailableLeaderboards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_available_leaderboards"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/leaderboard/getLeaderboard2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["community_get_leaderboard2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/account/FindProfiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_account_find_profiles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/account/getProfileName": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_account_get_profile_name"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/account/getProfileProperty": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_account_get_profile_property"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/account/FindProfilesByPlatformID": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_account_find_profiles_by_platform_id"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/account/setAvatarMetadata": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_account_set_avatar_metadata"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/account/setLanguage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_account_set_language"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Achievement/getAchievements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_achievement_get_achievements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Achievement/getAvailableAchievements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description No authentication needed */
        get: operations["game_achievement_get_available_achievements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/achievement/syncStats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_achievement_sync_stats"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/findObservableAdvertisements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_advertisement_find_observable_advertisements_get"];
        put?: never;
        post: operations["game_advertisement_find_observable_advertisements_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/findAdvertisements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_advertisement_find_advertisements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/getAdvertisements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_advertisement_get_advertisements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/getLanAdvertisements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_advertisement_get_lan_advertisements"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/host": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_host"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_update"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_join"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/startObserving": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_start_observing"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/stopObserving": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_stop_observing"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/updatePlatformLobbyID": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_update_platform_lobby_id"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/updateState": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_update_state"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/updateTags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_update_tags"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/advertisement/leave": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_advertisement_leave"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/automatch/getAutomatchMap": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_automatch_get_automatch_map"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/automatch2/getAutomatchMap": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_automatch2_get_automatch_map"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/automatch2/polling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_automatch2_polling"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/automatch2/stoppolling": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_automatch2_stop_polling"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/automatch2/updateStatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_automatch2_update_status"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Challenge/getChallengeProgress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_challenge_get_challenge_progress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Challenge/getChallengeProgressByProfileID": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description TODO: Request not available in Wiki, this is guessed */
        get: operations["game_challenge_get_challenge_progress_by_profile_id"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Challenge/getChallenges": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_challenge_get_challenges"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/challenge/updateProgressBatched": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_challenge_update_progress_batched"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/chat/getChatChannels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_chat_get_chat_channels"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/chat/getOfflineMessages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_chat_get_offline_messages"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/chat/deleteOfflineMessage": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_chat_delete_offline_message"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/find": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_clan_find"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/getClan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_clan_get_clan"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/getClanInfoFull": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_clan_get_clan_info_full"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/apply": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_clan_apply"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/disband": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_clan_disband"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_clan_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/clan/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_clan_update"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/cloud/getFileURL": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_cloud_get_file_url_get"];
        put?: never;
        post: operations["game_cloud_get_file_url_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/cloud/getTempCredentials": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_cloud_get_temp_credentials"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/CommunityEvent/getAvailableCommunityEvents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_community_event_get_available_community_events"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/CommunityEvent/getEventChallengeProgress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_community_event_get_event_challenge_progress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/CommunityEvent/getEventStats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_community_event_get_event_stats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/invitation/cancelInvitation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_invitation_cancel_invitation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/invitation/extendInvitation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_invitation_extend_invitation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getInventoryByProfileIDs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_inventory_by_profile_ids"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getItemBundleItemsJson": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_item_bundle_items_json"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getItemDefinitionsJson": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_item_definitions_json"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getItemLoadouts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_item_loadouts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getItemPrices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_item_prices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getLevelRewardsTableJson": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_level_rewards_table_json"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getPersonalizedSaleItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_personalized_sale_items"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/getScheduledSaleAndItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_item_get_scheduled_sale_and_items"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/detachItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_item_detach_items"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/moveCharges": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_item_move_charges"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/moveItem": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_item_move_item"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/openItemPack": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_item_open_item_pack"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/signItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_item_sign_item"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/item/updateItemAttributes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_item_update_item_attributes"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getRecentMatchHistory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_recent_match_history_get"];
        put?: never;
        post: operations["game_leaderboard_get_recent_match_history_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getAvailableLeaderboards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_available_leaderboards"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getLeaderBoard": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_leaderboard"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getPartyStat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_party_stat"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getPersonalStat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description TODO: No request documented in Wiki, guessed parameters */
        get: operations["game_leaderboard_get_personal_stat"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getRecentMatchSinglePlayerHistory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_recent_match_single_player_history"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getStatGroupsByProfileIDs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_stat_groups_by_profile_ids"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/Leaderboard/getStatsForLeaderboardByProfileName": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_leaderboard_get_stats_for_leaderboard_by_profile_name"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/leaderboard/setAvatarStatValues": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_leaderboard_set_avatar_stat_values"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/login/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_login_logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/login/readSession": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_login_read_session"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/login/platformlogin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_login_platform_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/news/getNews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_news_get_news"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/party/createOrReportSinglePlayer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_party_create_or_report_single_player"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/party/reportMatch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_party_report_match"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/playerreport/reportuser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_playerreport_report_user"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/party/sendMatchChat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_party_send_match_chat"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/party/finalizeReplayUpload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_party_finalize_replay_upload"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/party/peerAdd": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_party_peer_add"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/party/peerUpdate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_party_peer_update"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/relationship/getPresenceData": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_relationship_get_presence_data"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/relationship/getRelationships": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["game_relationship_get_relationships"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/relationship/clearRelationship": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_relationship_clear_relationship"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/relationship/ignore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_relationship_ignore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/relationship/setPresence": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_relationship_set_presence"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/relationship/setPresenceProperty": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_relationship_set_presence_property"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: {
        /** @description Can be anything: string, number, array, object, etc., including `null` */
        AnyJSONValue: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": unknown;
            };
        };
        /** @description Can be anything: string, number, array, object, etc., including `null` */
        AnyJSONValueUTF8: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json;charset=utf-8": unknown;
            };
        };
    };
    parameters: {
        /** @example 148 */
        callNum: number;
        /** @example bgoo2n1murnn43kzdnnfc9fhp2no19 */
        connect_id: string;
        /** @example 918824 */
        lastCallTime: string;
        /** @example null */
        name: string;
        /** @example bgoo2n1murnn43kzdnnfc9fhp2no19 */
        sessionID: string;
        /** @example [
         *       196240
         *     ] */
        profile_ids: number;
        /** @example [
         *       196240,
         *       196241
         *     ] */
        profileIDs: number;
        /** @example 196240 */
        profile_id: number;
        /** @example [
         *       "appearOffline"
         *     ] */
        property_id: string;
        /** @example [
         *       [
         *         76561197960287620,
         *         76561197978627570,
         *         76561197978943280,
         *         76561198000229220,
         *         76561197972009040,
         *         76561197964180880,
         *         76561197966000900,
         *         76561197976722720
         *       ]
         *     ] */
        platformIDs: number;
        /** @example {
         *       "sharedHistory": 0
         *     } */
        metaData: Record<string, never>;
        /** @example [
         *       "age2",
         *       "age1"
         *     ] */
        titleCom: string;
        /** @example [
         *       "age1",
         *       "age2",
         *       "age3",
         *       "age4"
         *     ] */
        title: string;
        /** @example [
         *       "en",
         *       "de",
         *       "es",
         *       "fr"
         *     ] */
        language: string;
        /** @example wqFWpWL7ZV67HZ7b1kXEAtWofi34DFHX/HoiyJm46ooePlthNsS5F2TQiLHzUOSYuV/VGDmpk1Dr7r6E/OukY/lDE4MgrRQBkOTvV8HAnqJIAcqDTiZN9l1bimxn14vrnnNaBcOZyOvnkZD5oVahECESHlxgEewOhTdkOxLAuXLA+QxXYBlswaperH95/wGhUg11NN0AG2L/6ej929D5NIqDGlVrmp1oBRNYTqRhbvOgjyII0XElAvKwaR+bYKGqchd8RU4WGwPsrhN/5IKl4E7SpJH9UAWV4bH9v6lVwJqz8NGCawmq1p+V22G239k/c7x6chtyOJBPG9N220ot5A== */
        signature: string;
        /** @example STEAM */
        accountType: string;
        /** @example STEAM */
        auth: string;
        /** @example CAEQ8r/r2AwYBSBLKoABBvLEPiLC/jFgMWrApLt1wEVq/gNVsjg/mrmECUAQM5669cvmj8SxWM9wLNBzjZCyVJqlocVi/4hIU7il2ToQoiiLOiWuURy2ebX/AEcd8jS/iqMGZW6qIdoT9eumDueQOyKw4cH26mSVc3/bLRi2sf0vThM2dkt3eQ4Mnfr5xQs= */
        authLogin: string;
        /** @example 24916 */
        appBinaryChecksum: number;
        /** @example 200 */
        count: number;
        /** @example -638535971 */
        dataChecksum: number;
        /** @example 0 */
        desc: number;
        /** @example 0 */
        modDLLChecksum: number;
        /** @example INVALID */
        modDLLFile: string;
        /** @example INVALID */
        modName: string;
        /** @example INVALID */
        modVersion: string;
        /** @example 0 */
        observerGroupID: number;
        /** @example 0 */
        sortOrder: number;
        /** @example 0 */
        start: number;
        /** @example 0 */
        versionFlags: number;
        /** @example 0 */
        matchType_id: number;
        /** @example [
         *       1,
         *       2
         *     ] */
        race_ids: number;
        /** @example [
         *       12,
         *       34
         *     ] */
        statGroup_ids: number;
        /** @example [
         *       132,
         *       123
         *     ] */
        match_ids: number;
        /** @example [
         *       "123e88e6-88e1-4aa7-ab3c-a2975fc0b04d"
         *     ] */
        lanServerGuids: string;
        /** @example -1 */
        advertisementid: number;
        /** @example -1 */
        automatchPoll_id: number;
        /**
         * @description Lobby title
         * @example [
         *       "SESSION_MATCH_KEY",
         *       "Test"
         *     ]
         */
        description: string;
        /** @example 1 */
        hostid: number;
        /** @example 1 */
        isObservable: number;
        /** @example [
         *       "no_map",
         *       "ang_chp1_hastings"
         *     ] */
        mapname: string;
        /** @example 19 */
        matchtype: number;
        /** @example 8 */
        maxplayers: number;
        /** @example 180 */
        observerDelay: number;
        /** @example unknown password */
        observerPassword: string;
        /** @example opts */
        options: string;
        /** @example -1 */
        party: number;
        /** @example test */
        password: string;
        /** @example [
         *       0,
         *       1
         *     ] */
        passworded: number;
        /** @example 2039321 */
        race: number;
        /** @example [
         *       "australiasoutheast",
         *       "brazilsouth",
         *       "koreacentral",
         *       "ukwest",
         *       "southeastasia",
         *       "westus2",
         *       "westindia",
         *       "westeurope",
         *       "eastus"
         *     ] */
        relayRegion: string;
        /** @example 0 */
        serviceType: number;
        /**
         * @description zlib compressed
         * @example eNrtjkEKwjAQRT3LrKNYl10XoWBBqjtxMaQTHGySkoxCEe8uiaDewE127zMP5lUbdXrAFLzhkVpn/IoHqJeVgigo7F3bvKcQ2sRrBQb17yWgpi+7647uNGYxrQ5FX47z9FGELe0pbANa6g7Z49gTDnPm9PYWM1oSbFAQaoCnKpWlslSWyr9XnhcvuymdYw==
         */
        slotinfo: string;
        /** @example -1 */
        state: number;
        /** @example -1 */
        statgroup: number;
        /** @example -1 */
        team: number;
        /** @example 0 */
        visible: number;
        /** @example 50865084 */
        withPartySessionID: number;
        /** @example 50865084 */
        matchID: number;
        /** @example 109775243868575630 */
        platformlobbyID: number;
        /** @example [
         *       "CheatsEnabled",
         *       "Dataset",
         *       "TreatyLength",
         *       "Ranked",
         *       "Password"
         *     ] */
        numericTagNames: string;
        /** @example [
         *       0,
         *       1,
         *       0,
         *       0,
         *       0
         *     ] */
        numericTagValues: number;
        /** @example [
         *       "GameType",
         *       "MapStyleType",
         *       "Speed",
         *       "VictoryType",
         *       "Server"
         *     ] */
        stringTagNames: string;
        /** @example [
         *       "0",
         *       "0",
         *       "2",
         *       "9",
         *       "westeurope"
         *     ] */
        stringTagValues: string;
        /** @example 9876 */
        appBinCRC: number;
        /**
         * @description backwards appBinCRC?
         * @example 6789
         */
        dataCRC: number;
        /** @example [
         *       0,
         *       0,
         *       0,
         *       0
         *     ] */
        factionIDs: number;
        /** @example [
         *       20,
         *       21,
         *       22,
         *       23
         *     ] */
        matchTypes: number;
        /** @example 50865084 */
        partySessionID: number;
        /** @example [
         *       0,
         *       1,
         *       2,
         *       3
         *     ] */
        raceInfoKey: number;
        /** @example [
         *       233334,
         *       233334,
         *       233334,
         *       233334
         *     ] */
        raceInfoProfileID: number;
        /** @example [
         *       2039321,
         *       2039321,
         *       2039321,
         *       2039321
         *     ] */
        raceInfoRaceID: number;
        /** @example [
         *       264,
         *       220,
         *       253,
         *       45,
         *       187,
         *       191,
         *       153,
         *       45,
         *       119
         *     ] */
        relayPingTimes: number;
        /** @example [
         *       "australiasoutheast",
         *       "brazilsouth",
         *       "koreacentral",
         *       "ukwest",
         *       "southeastasia",
         *       "westus2",
         *       "westindia",
         *       "westeurope",
         *       "eastus"
         *     ] */
        relayRegions: string;
        /** @example [
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       2,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3,
         *       3
         *     ] */
        vetoMapKey: number;
        /** @example [
         *       "hideout_tiny",
         *       "hideout_small",
         *       "hideout_medium",
         *       "hideout_large",
         *       "archipelago_medium",
         *       "high_view_small",
         *       "archipelago_large",
         *       "high_view_medium",
         *       "archipelago_gigantic",
         *       "high_view_large",
         *       "archipelago_small",
         *       "high_view_tiny",
         *       "hideout_tiny",
         *       "hideout_small",
         *       "hideout_medium",
         *       "hideout_large",
         *       "archipelago_medium",
         *       "high_view_small",
         *       "archipelago_large",
         *       "high_view_medium",
         *       "archipelago_gigantic",
         *       "high_view_large",
         *       "archipelago_small",
         *       "high_view_tiny",
         *       "hideout_tiny",
         *       "hideout_small",
         *       "hideout_medium",
         *       "hideout_large",
         *       "archipelago_medium",
         *       "high_view_small",
         *       "archipelago_large",
         *       "high_view_medium",
         *       "archipelago_gigantic",
         *       "high_view_large",
         *       "archipelago_small",
         *       "high_view_tiny",
         *       "hideout_tiny",
         *       "hideout_small",
         *       "hideout_medium",
         *       "hideout_large",
         *       "archipelago_medium",
         *       "high_view_small",
         *       "archipelago_large",
         *       "high_view_medium",
         *       "archipelago_gigantic",
         *       "high_view_large",
         *       "archipelago_small",
         *       "high_view_tiny"
         *     ] */
        vetoMaps: string;
        /** @example 0 */
        commit: number;
        /** @example 233334 */
        ownerProfileID: number;
        /** @example 1 */
        result: number;
        /** @example 0 */
        resultCode: number;
        /** @example [
         *       646542981
         *     ] */
        progressIDs: number;
        /** @example [
         *       1
         *     ] */
        updateAmounts: number;
        /** @example 70218256 */
        messageID: number;
        /** @example [
         *       0,
         *       1,
         *       2
         *     ] */
        joinPolicies: number;
        /** @example 1 */
        joinPolicy: number;
        /** @example [] */
        tags: string;
        /** @example [
         *       196240
         *     ] */
        profileidsCom: number;
        /** @example [
         *       "192640"
         *     ] */
        profile_idsCom: string;
        /** @example [%22/steam/76561197984749679%22] */
        profile_namesCom: string;
        /** @example 1 */
        sortBy: number;
        /** @example PC_STEAM */
        platformCom: string;
        /** @example 3 */
        leaderboard_id: number;
        /** @example [BlackRock] */
        aliasesCom: string;
        /** @example ["/steam/76561197984749679"] */
        profileNamesCom: string;
        /** @example /ISteamUser/GetPlayerSummaries/v0002/ */
        SteamRequestCom: string;
        /** @example [
         *       "Liiit"
         *     ] */
        names: string;
        /** @example TURK */
        clanList_name: string;
        /** @example [
         *       ""
         *     ] */
        chat: string;
        /** @example 0 */
        cost: number;
        /** @example [
         *       ""
         *     ] */
        demote: string;
        /** @example [
         *       ""
         *     ] */
        disband: string;
        /** @example [
         *       ""
         *     ] */
        editInfo: string;
        /** @example [
         *       ""
         *     ] */
        editPermission: string;
        /** @example Rusty */
        fullName: string;
        /** @example CR-001 */
        icon: string;
        /** @example [
         *       ""
         *     ] */
        invite: string;
        /** @example -1 */
        itemPrice_id: number;
        /** @example [] */
        locStringID: number;
        /** @example null */
        messageOfTheDay: string;
        /** @example {
         *       "location": 4,
         *       "clanTag": "KAOS",
         *       "clanName": "KAOS"
         *     } */
        metadata: Record<string, never>;
        /** @example -1 */
        paymentitem: number;
        /** @example [] */
        permissionName: string;
        /** @example [] */
        promote: string;
        /** @example [] */
        rank: string;
        /** @example [] */
        remove: string;
        /** @example 110061 */
        clanList_id: number;
        /** @example 22 */
        event_id: number;
        /** @example 11190194 */
        member_id: number;
        /** @example 1 */
        group_type: number;
        /** @example 186430525 */
        gatheringid: number;
        /** @example 421346 */
        inviteeid: number;
        /** @example password! */
        gatheringpassword: string;
        /** @example /cloudfiles/game/6b861a867ce5f4e66131c929fe13db8baa40b5bb412255adcc225e6604ff703f */
        key: string;
        /** @example [
         *       "US",
         *       "DE"
         *     ] */
        country: string;
        /** @example [
         *       "usd"
         *     ] */
        currency: string;
        /** @example -1 */
        saleVersion: number;
        /** @example 1 */
        saleType: number;
        /** @example [
         *       1,
         *       1,
         *       1,
         *       1,
         *       1,
         *       1
         *     ] */
        itemCharges: number;
        /** @example [
         *       449911890,
         *       449911890,
         *       449911888,
         *       449911890,
         *       449911888,
         *       449911889
         *     ] */
        itemIDs: number;
        /** @example [
         *       0,
         *       0,
         *       0,
         *       0,
         *       0,
         *       0
         *     ] */
        itemLocations: number;
        /** @example [
         *       1
         *     ] */
        charges: number;
        /** @example [
         *       1
         *     ] */
        deletes: number;
        /** @example [
         *       449911778
         *     ] */
        fromItemIDs: number;
        /** @example [
         *       449911716
         *     ] */
        toItemIDs: number;
        /** @example [
         *       0,
         *       2
         *     ] */
        itemLocationIDs: number;
        /** @example [
         *       -1,
         *       -1
         *     ] */
        posIDs: number;
        /** @example [
         *       -1,
         *       -1
         *     ] */
        slotIDs: number;
        /** @example [] */
        choices: number;
        /** @example 449956852 */
        itemInstance_id: number;
        /** @example 0 */
        itemLocation_id: number;
        /** @example 3611078805 */
        crc: number;
        /** @example [
         *       [
         *         "is_new"
         *       ]
         *     ] */
        attributeKeys: string;
        /** @example [
         *       449911889
         *     ] */
        itemInstance_ids: number;
        /** @example [
         *       [
         *         "0"
         *       ]
         *     ] */
        attributeValues: string;
        /** @example [
         *       0
         *     ] */
        xpGains: number;
        /** @example [
         *       0
         *     ] */
        xpGained: number;
        /** @example [
         *       1,
         *       2
         *     ] */
        statsids: number;
        /** @example [
         *       2132331,
         *       31323213
         *     ] */
        profileids: number;
        /** @example [
         *       156
         *     ] */
        avatarStat_ids: number;
        /** @example [
         *       2
         *     ] */
        updateTypes: number;
        /** @example [
         *       687
         *     ] */
        values: number;
        /** @example 0 */
        ack: number;
        /** @example 0 */
        pollNum: number;
        /** @example -1 */
        activeMatchId: number;
        /** @example 1466860 */
        appID: number;
        /** @example Name */
        alias: string;
        /** @example windows */
        installationType: string;
        /** @example D4-BA-A1-43-29-19 */
        macAddress: string;
        /** @example 176 */
        clientLibVersion: number;
        /** @example 4.0.0 */
        majorVersion: string;
        /** @example 24916 */
        minorVersion: number;
        /** @example 765613333337299 */
        platformUserID: number;
        /** @example null */
        startGameToken: string;
        /** @example null */
        storeLicenseToken: string;
        /** @example [
         *       0,
         *       0
         *     ] */
        syncHash: number;
        /** @example 0 */
        timeoutOverride: number;
        /** @example 24916 */
        appbincrc: number;
        /**
         * @description zlib-compressed
         * @example H4sIAAAAAAAACouOBQApu0wNAgAAAA==
         */
        countersZip: string;
        /** @example 1 */
        createMatchKey: number;
        /**
         * @description backwards appBinCRC?
         * @example -638535971
         */
        datacrc: number;
        /** @example 0 */
        isComplete: number;
        /** @example [] */
        itemUpdates: number;
        /** @example null */
        matchKey: string;
        /** @example 17 */
        matchTypeID: number;
        /** @example [] */
        results: number;
        /**
         * @description zlib-compressed
         * @example eNrtVltvo0YU7m/xc7aCwSRLpH0wdgZj2Thg7lUfGMDiMmAaMDau+t97BpzEmzRdrdqXSH5AzJwznDmX7/tsHt389ueoetptUxqr5Xb3axqN7pEwvhXGN6O6CZp0V6qz0T1/M2rioGBL7ma0DcJnB+yegjBmS4T4u/GY7ct8GbcxPXvLfBU0YWJ2VX/sC4uVFvFj/ISfgiJebfpzaW3EQdT1a3bxvu6XRdwEs6AJRvejuFs0LqJ7A+HG36i3q+khJbZUkdKnpDTasKQb38F5/Oo7EAWLvrt4tW96e+c5Yk4Qb0YK7iIstyGiXOBIezXbHZdTuEfQOM9dgE0sLUU6Ba5RETRO1yk3+BHf+lhOPNQ8hnPmE09qVt2pxYud7YnrcjXYtsSRckvBWcD5tedE4Nsd3sQ5WYKRRHO7/w5qTcJCWxhT9VbNjZXmSMslJ/3hc7aroWS/xrTSkH6w+QfpcaPWasnyNfiwG2oP0bGN4Nul+QD3G3syZfbxYTWbwCNL7tCHJLBlGpZaSwpcQ40i5JWq6dlnHVvPMdrI1dN1pndrUxe1LIS31dfkIelEHBt6pL3twTZUMMzFMD2UUDjT13GeXw53cKss59amJ8CbH/ptiKFiwT2yNOzlBHrPWfNFRRzcsdmp6dd22X1toxMnnXM8eA7dR1ijkMveV350zugCh4MZqr1/KYRD717ztfx+5h/GSaEfpW/LEIdPwjJ/E2txzt2gnsPLRDlWgLOMYVXNsaxb8JgvsWC+vKg7UJ/CsDfM/XkuzGe7chkWOPfdVbqmTTTgBXfEpTYpKMdm7fADvnxFWhPB2JxxXcUF6+VD7wtcDewatQoMPZIaMqem7xypB3n60xeu7DxXmxJFygJk57YVzV4wKsi151Ia5oATReLDlOFqIU0m376N/rp5rx+M4Rfa8eVCPPgPxYMTb+++Fw/038QD/f/iMf0c4vFv5PYVu/Bcu46wlAFIGTFKkg4kgPWKIJwTweb+kaRIg1p5Gik0MwW5r5mBsO/tM2GRtvMdnm4sEI2y7nvMQKbNVFGb5Ug7wXvIj4tdmbJatptLkn5Eru+ICgBmdRk/OmeFBW1Y3b2/k4RHk0svBcZW7A7q+TCOxwiIbJ3FgZmKb2Odc+cAI43uHGsQj72HgHzpQrYY4a2H11juooktnAbOsYI76SWBe59tH3xhkcCM3ouBI1bR/FIIjNYsJO6Z1IFb0Rf8IXoCe+bbiwR61BLnKFrIrqFnkCcT8
         */
        slotInfo: string;
        /** @example [] */
        teamIDs: number;
        /** @example [] */
        errorString: string;
        /** @example 1 */
        finalizeResult: number;
        /** @example [
         *       0,
         *       1
         *     ] */
        isSinglePlayer: number;
        /** @example 186444398 */
        match_id: number;
        /** @example [
         *       0,
         *       0
         *     ] */
        checkSums: number;
        /** @example [
         *       1,
         *       7
         *     ] */
        simplayerIDs: number;
        /** @example [
         *       0,
         *       0
         *     ] */
        isNonParticipants: number;
        /** @example 340242 */
        size: number;
        /** @example https://rl0aoelivemk2blob.blob.core.windows.net/cloudfiles/436432/aoelive_/age2/replay/windows/4.0.0/0/M_186444398_8b31ed6602350cce7ee1736393cab532712c579e545fdd41995117491b1ae319.gz */
        url: string;
        /**
         * @description aoe4: 1, aoe2de: 0
         * @example [
         *       0,
         *       1
         *     ]
         */
        broadcast: number;
        /** @example 0*gg */
        message: string;
        /** @example 0 */
        messageTypeID: number;
        /** @example 0 */
        from_profile_id: number;
        /** @example 0 */
        to_profile_id: number;
        /** @example misclick */
        comment: string;
        /**
         * @description 7=all reasons
         * @example 7
         */
        reportReason: number;
        /** @example null */
        reportType: number;
        /** @example 209072 */
        reportee_profile_id: number;
        /**
         * @description 1=Unban, 2=Unmute
         * @example [
         *       1,
         *       2
         *     ]
         */
        relationType: number;
        /** @example 4994658 */
        targetProfileID: number;
        /** @example 3 */
        presence_id: number;
        /**
         * @description 1=lobby ban, 2=mute
         * @example [
         *       1,
         *       2
         *     ]
         */
        blocklevel: number;
        /** @example 1409823 */
        presencePropertyDef_id: number;
        /** @example -2 */
        propertyValue: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    community_proxy_steam_user_request: {
        parameters: {
            query?: {
                /** @example /ISteamUser/GetPlayerSummaries/v0002/ */
                request?: components["parameters"]["SteamRequestCom"];
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [
                 *       "192640"
                 *     ] */
                profile_ids?: components["parameters"]["profile_idsCom"];
                /** @example ["/steam/76561197984749679"] */
                profileNames?: components["parameters"]["profileNamesCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_personal_stat: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [
                 *       "192640"
                 *     ] */
                profile_ids?: components["parameters"]["profile_idsCom"];
                /** @example [%22/steam/76561197984749679%22] */
                profile_names?: components["parameters"]["profile_namesCom"];
                /** @example [BlackRock] */
                aliases?: components["parameters"]["aliasesCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_recent_match_history: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [
                 *       "192640"
                 *     ] */
                profile_ids?: components["parameters"]["profile_idsCom"];
                /** @example [%22/steam/76561197984749679%22] */
                profile_names?: components["parameters"]["profile_namesCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_find_advertisements: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_avatar_stat_for_profile: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [%22/steam/76561197984749679%22] */
                profile_names?: components["parameters"]["profile_namesCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_achievements: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [
                 *       196240
                 *     ] */
                profileids?: components["parameters"]["profileidsCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_available_achievements: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_news_get_news: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_clan_find: {
        parameters: {
            query: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [
                 *       0,
                 *       1,
                 *       2
                 *     ] */
                joinPolicies: components["parameters"]["joinPolicies"];
                /** @example null */
                name: components["parameters"]["name"];
                /** @example [] */
                tags: components["parameters"]["tags"];
                /** @example 0 */
                start: components["parameters"]["start"];
                /** @example 200 */
                count: components["parameters"]["count"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_clan_info_full: {
        parameters: {
            query: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example null */
                name: components["parameters"]["name"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_available_community_events: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_inventory_by_profile_ids: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example [
                 *       196240
                 *     ] */
                profileids?: components["parameters"]["profileidsCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_available_leaderboards: {
        parameters: {
            query?: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    community_get_leaderboard2: {
        parameters: {
            query: {
                /** @example [
                 *       "age2",
                 *       "age1"
                 *     ] */
                title?: components["parameters"]["titleCom"];
                /** @example 3 */
                leaderboard_id?: components["parameters"]["leaderboard_id"];
                /** @example 0 */
                start: components["parameters"]["start"];
                /** @example 200 */
                count: components["parameters"]["count"];
                /** @example 1 */
                sortBy?: components["parameters"]["sortBy"];
                /** @example PC_STEAM */
                platform?: components["parameters"]["platformCom"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValueUTF8"];
        };
    };
    game_account_find_profiles: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example null */
                name: components["parameters"]["name"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_account_get_profile_name: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_account_get_profile_property: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 196240 */
                profile_id: components["parameters"]["profile_id"];
                /** @example [
                 *       "appearOffline"
                 *     ] */
                property_id: components["parameters"]["property_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_account_find_profiles_by_platform_id: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       [
                 *         76561197960287620,
                 *         76561197978627570,
                 *         76561197978943280,
                 *         76561198000229220,
                 *         76561197972009040,
                 *         76561197964180880,
                 *         76561197966000900,
                 *         76561197976722720
                 *       ]
                 *     ] */
                platformIDs: components["parameters"]["platformIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_account_set_avatar_metadata: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example {
                 *       "sharedHistory": 0
                 *     } */
                metaData: components["parameters"]["metaData"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_account_set_language: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "age1",
                 *       "age2",
                 *       "age3",
                 *       "age4"
                 *     ] */
                title?: components["parameters"]["title"];
                /** @example [
                 *       "en",
                 *       "de",
                 *       "es",
                 *       "fr"
                 *     ] */
                language?: components["parameters"]["language"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_achievement_get_achievements: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       196240,
                 *       196241
                 *     ] */
                profileIDs: components["parameters"]["profileIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_achievement_get_available_achievements: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example wqFWpWL7ZV67HZ7b1kXEAtWofi34DFHX/HoiyJm46ooePlthNsS5F2TQiLHzUOSYuV/VGDmpk1Dr7r6E/OukY/lDE4MgrRQBkOTvV8HAnqJIAcqDTiZN9l1bimxn14vrnnNaBcOZyOvnkZD5oVahECESHlxgEewOhTdkOxLAuXLA+QxXYBlswaperH95/wGhUg11NN0AG2L/6ej929D5NIqDGlVrmp1oBRNYTqRhbvOgjyII0XElAvKwaR+bYKGqchd8RU4WGwPsrhN/5IKl4E7SpJH9UAWV4bH9v6lVwJqz8NGCawmq1p+V22G239k/c7x6chtyOJBPG9N220ot5A== */
                signature: components["parameters"]["signature"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_achievement_sync_stats: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example STEAM */
                accountType: components["parameters"]["accountType"];
                /** @example STEAM */
                auth: components["parameters"]["auth"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_find_observable_advertisements_get: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example 200 */
                count: components["parameters"]["count"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /** @example 0 */
                desc: components["parameters"]["desc"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example 0 */
                observerGroupID: components["parameters"]["observerGroupID"];
                /** @example 0 */
                sortOrder: components["parameters"]["sortOrder"];
                /** @example 0 */
                start: components["parameters"]["start"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_find_observable_advertisements_post: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example 200 */
                count: components["parameters"]["count"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /** @example 0 */
                desc: components["parameters"]["desc"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example 0 */
                observerGroupID: components["parameters"]["observerGroupID"];
                /** @example 0 */
                sortOrder: components["parameters"]["sortOrder"];
                /** @example 0 */
                start: components["parameters"]["start"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_find_advertisements: {
        parameters: {
            query: {
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 0 */
                matchType_id: components["parameters"]["matchType_id"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
                /** @example [
                 *       1,
                 *       2
                 *     ] */
                race_ids: components["parameters"]["race_ids"];
                /** @example [
                 *       12,
                 *       34
                 *     ] */
                statGroup_ids: components["parameters"]["statGroup_ids"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_get_advertisements: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       132,
                 *       123
                 *     ] */
                match_ids: components["parameters"]["match_ids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_get_lan_advertisements: {
        parameters: {
            query: {
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /** @example [
                 *       "123e88e6-88e1-4aa7-ab3c-a2975fc0b04d"
                 *     ] */
                lanServerGuids: components["parameters"]["lanServerGuids"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 0 */
                matchType_id: components["parameters"]["matchType_id"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_host: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example -1 */
                automatchPoll_id: components["parameters"]["automatchPoll_id"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /**
                 * @description Lobby title
                 * @example [
                 *       "SESSION_MATCH_KEY",
                 *       "Test"
                 *     ]
                 */
                description: components["parameters"]["description"];
                /** @example 1 */
                hostid: components["parameters"]["hostid"];
                /** @example 1 */
                isObservable: components["parameters"]["isObservable"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "no_map",
                 *       "ang_chp1_hastings"
                 *     ] */
                mapname: components["parameters"]["mapname"];
                /** @example 19 */
                matchtype: components["parameters"]["matchtype"];
                /** @example 8 */
                maxplayers: components["parameters"]["maxplayers"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example 180 */
                observerDelay: components["parameters"]["observerDelay"];
                /** @example unknown password */
                observerPassword: components["parameters"]["observerPassword"];
                /** @example opts */
                options: components["parameters"]["options"];
                /** @example -1 */
                party: components["parameters"]["party"];
                /** @example test */
                password: components["parameters"]["password"];
                /** @example [
                 *       0,
                 *       1
                 *     ] */
                passworded: components["parameters"]["passworded"];
                /** @example 2039321 */
                race: components["parameters"]["race"];
                /** @example [
                 *       "australiasoutheast",
                 *       "brazilsouth",
                 *       "koreacentral",
                 *       "ukwest",
                 *       "southeastasia",
                 *       "westus2",
                 *       "westindia",
                 *       "westeurope",
                 *       "eastus"
                 *     ] */
                relayRegion: components["parameters"]["relayRegion"];
                /** @example 0 */
                serviceType: components["parameters"]["serviceType"];
                /**
                 * @description zlib compressed
                 * @example eNrtjkEKwjAQRT3LrKNYl10XoWBBqjtxMaQTHGySkoxCEe8uiaDewE127zMP5lUbdXrAFLzhkVpn/IoHqJeVgigo7F3bvKcQ2sRrBQb17yWgpi+7647uNGYxrQ5FX47z9FGELe0pbANa6g7Z49gTDnPm9PYWM1oSbFAQaoCnKpWlslSWyr9XnhcvuymdYw==
                 */
                slotinfo: components["parameters"]["slotinfo"];
                /** @example -1 */
                state: components["parameters"]["state"];
                /** @example -1 */
                statgroup: components["parameters"]["statgroup"];
                /** @example -1 */
                team: components["parameters"]["team"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
                /** @example 0 */
                visible: components["parameters"]["visible"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_update: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example -1 */
                automatchPoll_id: components["parameters"]["automatchPoll_id"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /**
                 * @description Lobby title
                 * @example [
                 *       "SESSION_MATCH_KEY",
                 *       "Test"
                 *     ]
                 */
                description: components["parameters"]["description"];
                /** @example 1 */
                hostid: components["parameters"]["hostid"];
                /** @example 1 */
                isObservable: components["parameters"]["isObservable"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "no_map",
                 *       "ang_chp1_hastings"
                 *     ] */
                mapname: components["parameters"]["mapname"];
                /** @example 19 */
                matchtype: components["parameters"]["matchtype"];
                /** @example 8 */
                maxplayers: components["parameters"]["maxplayers"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example 180 */
                observerDelay: components["parameters"]["observerDelay"];
                /** @example unknown password */
                observerPassword: components["parameters"]["observerPassword"];
                /** @example opts */
                options: components["parameters"]["options"];
                /** @example test */
                password: components["parameters"]["password"];
                /** @example [
                 *       0,
                 *       1
                 *     ] */
                passworded: components["parameters"]["passworded"];
                /** @example 2039321 */
                race: components["parameters"]["race"];
                /**
                 * @description zlib compressed
                 * @example eNrtjkEKwjAQRT3LrKNYl10XoWBBqjtxMaQTHGySkoxCEe8uiaDewE127zMP5lUbdXrAFLzhkVpn/IoHqJeVgigo7F3bvKcQ2sRrBQb17yWgpi+7647uNGYxrQ5FX47z9FGELe0pbANa6g7Z49gTDnPm9PYWM1oSbFAQaoCnKpWlslSWyr9XnhcvuymdYw==
                 */
                slotinfo: components["parameters"]["slotinfo"];
                /** @example -1 */
                state: components["parameters"]["state"];
                /** @example -1 */
                team: components["parameters"]["team"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
                /** @example 0 */
                visible: components["parameters"]["visible"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_join: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example -1 */
                party: components["parameters"]["party"];
                /** @example test */
                password: components["parameters"]["password"];
                /** @example 2039321 */
                race: components["parameters"]["race"];
                /** @example -1 */
                statgroup: components["parameters"]["statgroup"];
                /** @example -1 */
                team: components["parameters"]["team"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_start_observing: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 24916 */
                appBinaryChecksum: components["parameters"]["appBinaryChecksum"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example -638535971 */
                dataChecksum: components["parameters"]["dataChecksum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example test */
                password: components["parameters"]["password"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
                /** @example 50865084 */
                withPartySessionID: components["parameters"]["withPartySessionID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_stop_observing: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_update_platform_lobby_id: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 50865084 */
                matchID: components["parameters"]["matchID"];
                /** @example 109775243868575630 */
                platformlobbyID: components["parameters"]["platformlobbyID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_update_state: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_update_tags: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "CheatsEnabled",
                 *       "Dataset",
                 *       "TreatyLength",
                 *       "Ranked",
                 *       "Password"
                 *     ] */
                numericTagNames: components["parameters"]["numericTagNames"];
                /** @example [
                 *       0,
                 *       1,
                 *       0,
                 *       0,
                 *       0
                 *     ] */
                numericTagValues: components["parameters"]["numericTagValues"];
                /** @example [
                 *       "GameType",
                 *       "MapStyleType",
                 *       "Speed",
                 *       "VictoryType",
                 *       "Server"
                 *     ] */
                stringTagNames: components["parameters"]["stringTagNames"];
                /** @example [
                 *       "0",
                 *       "0",
                 *       "2",
                 *       "9",
                 *       "westeurope"
                 *     ] */
                stringTagValues: components["parameters"]["stringTagValues"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_advertisement_leave: {
        parameters: {
            query: {
                /** @example -1 */
                advertisementid: components["parameters"]["advertisementid"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_automatch_get_automatch_map: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_automatch2_get_automatch_map: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_automatch2_polling: {
        parameters: {
            query: {
                /** @example 9876 */
                appBinCRC: components["parameters"]["appBinCRC"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /**
                 * @description backwards appBinCRC?
                 * @example 6789
                 */
                dataCRC: components["parameters"]["dataCRC"];
                /** @example [
                 *       0,
                 *       0,
                 *       0,
                 *       0
                 *     ] */
                factionIDs: components["parameters"]["factionIDs"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       20,
                 *       21,
                 *       22,
                 *       23
                 *     ] */
                matchTypes: components["parameters"]["matchTypes"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example opts */
                options: components["parameters"]["options"];
                /** @example 50865084 */
                partySessionID: components["parameters"]["partySessionID"];
                /** @example [
                 *       0,
                 *       1,
                 *       2,
                 *       3
                 *     ] */
                raceInfoKey: components["parameters"]["raceInfoKey"];
                /** @example [
                 *       233334,
                 *       233334,
                 *       233334,
                 *       233334
                 *     ] */
                raceInfoProfileID: components["parameters"]["raceInfoProfileID"];
                /** @example [
                 *       2039321,
                 *       2039321,
                 *       2039321,
                 *       2039321
                 *     ] */
                raceInfoRaceID: components["parameters"]["raceInfoRaceID"];
                /** @example [
                 *       264,
                 *       220,
                 *       253,
                 *       45,
                 *       187,
                 *       191,
                 *       153,
                 *       45,
                 *       119
                 *     ] */
                relayPingTimes: components["parameters"]["relayPingTimes"];
                /** @example [
                 *       "australiasoutheast",
                 *       "brazilsouth",
                 *       "koreacentral",
                 *       "ukwest",
                 *       "southeastasia",
                 *       "westus2",
                 *       "westindia",
                 *       "westeurope",
                 *       "eastus"
                 *     ] */
                relayRegion: components["parameters"]["relayRegion"];
                /** @example [
                 *       "australiasoutheast",
                 *       "brazilsouth",
                 *       "koreacentral",
                 *       "ukwest",
                 *       "southeastasia",
                 *       "westus2",
                 *       "westindia",
                 *       "westeurope",
                 *       "eastus"
                 *     ] */
                relayRegions: components["parameters"]["relayRegions"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
                /** @example [
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       2,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3,
                 *       3
                 *     ] */
                vetoMapKey: components["parameters"]["vetoMapKey"];
                /** @example [
                 *       "hideout_tiny",
                 *       "hideout_small",
                 *       "hideout_medium",
                 *       "hideout_large",
                 *       "archipelago_medium",
                 *       "high_view_small",
                 *       "archipelago_large",
                 *       "high_view_medium",
                 *       "archipelago_gigantic",
                 *       "high_view_large",
                 *       "archipelago_small",
                 *       "high_view_tiny",
                 *       "hideout_tiny",
                 *       "hideout_small",
                 *       "hideout_medium",
                 *       "hideout_large",
                 *       "archipelago_medium",
                 *       "high_view_small",
                 *       "archipelago_large",
                 *       "high_view_medium",
                 *       "archipelago_gigantic",
                 *       "high_view_large",
                 *       "archipelago_small",
                 *       "high_view_tiny",
                 *       "hideout_tiny",
                 *       "hideout_small",
                 *       "hideout_medium",
                 *       "hideout_large",
                 *       "archipelago_medium",
                 *       "high_view_small",
                 *       "archipelago_large",
                 *       "high_view_medium",
                 *       "archipelago_gigantic",
                 *       "high_view_large",
                 *       "archipelago_small",
                 *       "high_view_tiny",
                 *       "hideout_tiny",
                 *       "hideout_small",
                 *       "hideout_medium",
                 *       "hideout_large",
                 *       "archipelago_medium",
                 *       "high_view_small",
                 *       "archipelago_large",
                 *       "high_view_medium",
                 *       "archipelago_gigantic",
                 *       "high_view_large",
                 *       "archipelago_small",
                 *       "high_view_tiny"
                 *     ] */
                vetoMaps: components["parameters"]["vetoMaps"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_automatch2_stop_polling: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 0 */
                commit: components["parameters"]["commit"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 233334 */
                ownerProfileID: components["parameters"]["ownerProfileID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_automatch2_update_status: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 50865084 */
                matchID: components["parameters"]["matchID"];
                /** @example 1 */
                result: components["parameters"]["result"];
                /** @example 0 */
                resultCode: components["parameters"]["resultCode"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_challenge_get_challenge_progress: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_challenge_get_challenge_progress_by_profile_id: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 196240 */
                profile_id: components["parameters"]["profile_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_challenge_get_challenges: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example wqFWpWL7ZV67HZ7b1kXEAtWofi34DFHX/HoiyJm46ooePlthNsS5F2TQiLHzUOSYuV/VGDmpk1Dr7r6E/OukY/lDE4MgrRQBkOTvV8HAnqJIAcqDTiZN9l1bimxn14vrnnNaBcOZyOvnkZD5oVahECESHlxgEewOhTdkOxLAuXLA+QxXYBlswaperH95/wGhUg11NN0AG2L/6ej929D5NIqDGlVrmp1oBRNYTqRhbvOgjyII0XElAvKwaR+bYKGqchd8RU4WGwPsrhN/5IKl4E7SpJH9UAWV4bH9v6lVwJqz8NGCawmq1p+V22G239k/c7x6chtyOJBPG9N220ot5A== */
                signature: components["parameters"]["signature"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_challenge_update_progress_batched: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       646542981
                 *     ] */
                progressIDs: components["parameters"]["progressIDs"];
                /** @example [
                 *       1
                 *     ] */
                updateAmounts: components["parameters"]["updateAmounts"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_chat_get_chat_channels: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_chat_get_offline_messages: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_chat_delete_offline_message: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 70218256 */
                messageID: components["parameters"]["messageID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_find: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 200 */
                count: components["parameters"]["count"];
                /** @example [
                 *       0,
                 *       1,
                 *       2
                 *     ] */
                joinPolicies: components["parameters"]["joinPolicies"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example null */
                name: components["parameters"]["name"];
                /** @example 0 */
                start: components["parameters"]["start"];
                /** @example [] */
                tags: components["parameters"]["tags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_get_clan: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "Liiit"
                 *     ] */
                names: components["parameters"]["names"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_get_clan_info_full: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example null */
                name: components["parameters"]["name"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_apply: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example TURK */
                clanList_name: components["parameters"]["clanList_name"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_disband: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_create: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       ""
                 *     ] */
                chat: components["parameters"]["chat"];
                /** @example 0 */
                cost: components["parameters"]["cost"];
                /** @example [
                 *       ""
                 *     ] */
                demote: components["parameters"]["demote"];
                /**
                 * @description Lobby title
                 * @example [
                 *       "SESSION_MATCH_KEY",
                 *       "Test"
                 *     ]
                 */
                description: components["parameters"]["description"];
                /** @example [
                 *       ""
                 *     ] */
                disband: components["parameters"]["disband"];
                /** @example [
                 *       ""
                 *     ] */
                editInfo: components["parameters"]["editInfo"];
                /** @example [
                 *       ""
                 *     ] */
                editPermission: components["parameters"]["editPermission"];
                /** @example Rusty */
                fullName: components["parameters"]["fullName"];
                /** @example CR-001 */
                icon: components["parameters"]["icon"];
                /** @example [
                 *       ""
                 *     ] */
                invite: components["parameters"]["invite"];
                /** @example -1 */
                itemPrice_id: components["parameters"]["itemPrice_id"];
                /** @example 1 */
                joinPolicy: components["parameters"]["joinPolicy"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [] */
                locStringID: components["parameters"]["locStringID"];
                /** @example null */
                messageOfTheDay: components["parameters"]["messageOfTheDay"];
                /** @example {
                 *       "location": 4,
                 *       "clanTag": "KAOS",
                 *       "clanName": "KAOS"
                 *     } */
                metadata: components["parameters"]["metadata"];
                /** @example null */
                name: components["parameters"]["name"];
                /** @example -1 */
                paymentitem: components["parameters"]["paymentitem"];
                /** @example [] */
                permissionName: components["parameters"]["permissionName"];
                /** @example [] */
                promote: components["parameters"]["promote"];
                /** @example [] */
                rank: components["parameters"]["rank"];
                /** @example [] */
                remove: components["parameters"]["remove"];
                /** @example [] */
                tags: components["parameters"]["tags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_clan_update: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 110061 */
                clanList_id: components["parameters"]["clanList_id"];
                /**
                 * @description Lobby title
                 * @example [
                 *       "SESSION_MATCH_KEY",
                 *       "Test"
                 *     ]
                 */
                description: components["parameters"]["description"];
                /** @example CR-001 */
                icon: components["parameters"]["icon"];
                /** @example 1 */
                joinPolicy: components["parameters"]["joinPolicy"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example null */
                messageOfTheDay: components["parameters"]["messageOfTheDay"];
                /** @example {
                 *       "location": 4,
                 *       "clanTag": "KAOS",
                 *       "clanName": "KAOS"
                 *     } */
                metadata: components["parameters"]["metadata"];
                /** @example [] */
                tags: components["parameters"]["tags"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_cloud_get_file_url_get: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "Liiit"
                 *     ] */
                names: components["parameters"]["names"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_cloud_get_file_url_post: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "Liiit"
                 *     ] */
                names: components["parameters"]["names"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_cloud_get_temp_credentials: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example /cloudfiles/game/6b861a867ce5f4e66131c929fe13db8baa40b5bb412255adcc225e6604ff703f */
                key: components["parameters"]["key"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_community_event_get_available_community_events: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_community_event_get_event_challenge_progress: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 22 */
                event_id: components["parameters"]["event_id"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_community_event_get_event_stats: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 22 */
                event_id: components["parameters"]["event_id"];
                /** @example 1 */
                group_type: components["parameters"]["group_type"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 11190194 */
                member_id: components["parameters"]["member_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_invitation_cancel_invitation: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 186430525 */
                gatheringid: components["parameters"]["gatheringid"];
                /** @example 421346 */
                inviteeid: components["parameters"]["inviteeid"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_invitation_extend_invitation: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 186430525 */
                gatheringid: components["parameters"]["gatheringid"];
                /** @example password! */
                gatheringpassword: components["parameters"]["gatheringpassword"];
                /** @example 421346 */
                inviteeid: components["parameters"]["inviteeid"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_inventory_by_profile_ids: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       196240,
                 *       196241
                 *     ] */
                profileIDs: components["parameters"]["profileIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_item_bundle_items_json: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example wqFWpWL7ZV67HZ7b1kXEAtWofi34DFHX/HoiyJm46ooePlthNsS5F2TQiLHzUOSYuV/VGDmpk1Dr7r6E/OukY/lDE4MgrRQBkOTvV8HAnqJIAcqDTiZN9l1bimxn14vrnnNaBcOZyOvnkZD5oVahECESHlxgEewOhTdkOxLAuXLA+QxXYBlswaperH95/wGhUg11NN0AG2L/6ej929D5NIqDGlVrmp1oBRNYTqRhbvOgjyII0XElAvKwaR+bYKGqchd8RU4WGwPsrhN/5IKl4E7SpJH9UAWV4bH9v6lVwJqz8NGCawmq1p+V22G239k/c7x6chtyOJBPG9N220ot5A== */
                signature: components["parameters"]["signature"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_item_definitions_json: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example wqFWpWL7ZV67HZ7b1kXEAtWofi34DFHX/HoiyJm46ooePlthNsS5F2TQiLHzUOSYuV/VGDmpk1Dr7r6E/OukY/lDE4MgrRQBkOTvV8HAnqJIAcqDTiZN9l1bimxn14vrnnNaBcOZyOvnkZD5oVahECESHlxgEewOhTdkOxLAuXLA+QxXYBlswaperH95/wGhUg11NN0AG2L/6ej929D5NIqDGlVrmp1oBRNYTqRhbvOgjyII0XElAvKwaR+bYKGqchd8RU4WGwPsrhN/5IKl4E7SpJH9UAWV4bH9v6lVwJqz8NGCawmq1p+V22G239k/c7x6chtyOJBPG9N220ot5A== */
                signature: components["parameters"]["signature"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_item_loadouts: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_item_prices: {
        parameters: {
            query: {
                /** @example STEAM */
                accountType: components["parameters"]["accountType"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "US",
                 *       "DE"
                 *     ] */
                country: components["parameters"]["country"];
                /** @example [
                 *       "usd"
                 *     ] */
                currency: components["parameters"]["currency"];
                /** @example -1 */
                saleVersion: components["parameters"]["saleVersion"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_level_rewards_table_json: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example wqFWpWL7ZV67HZ7b1kXEAtWofi34DFHX/HoiyJm46ooePlthNsS5F2TQiLHzUOSYuV/VGDmpk1Dr7r6E/OukY/lDE4MgrRQBkOTvV8HAnqJIAcqDTiZN9l1bimxn14vrnnNaBcOZyOvnkZD5oVahECESHlxgEewOhTdkOxLAuXLA+QxXYBlswaperH95/wGhUg11NN0AG2L/6ej929D5NIqDGlVrmp1oBRNYTqRhbvOgjyII0XElAvKwaR+bYKGqchd8RU4WGwPsrhN/5IKl4E7SpJH9UAWV4bH9v6lVwJqz8NGCawmq1p+V22G239k/c7x6chtyOJBPG9N220ot5A== */
                signature: components["parameters"]["signature"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_personalized_sale_items: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_get_scheduled_sale_and_items: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 1 */
                saleType: components["parameters"]["saleType"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_detach_items: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1,
                 *       1
                 *     ] */
                itemCharges: components["parameters"]["itemCharges"];
                /** @example [
                 *       449911890,
                 *       449911890,
                 *       449911888,
                 *       449911890,
                 *       449911888,
                 *       449911889
                 *     ] */
                itemIDs: components["parameters"]["itemIDs"];
                /** @example [
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0,
                 *       0
                 *     ] */
                itemLocations: components["parameters"]["itemLocations"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_move_charges: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       1
                 *     ] */
                charges: components["parameters"]["charges"];
                /** @example [
                 *       1
                 *     ] */
                deletes: components["parameters"]["deletes"];
                /** @example [
                 *       449911778
                 *     ] */
                fromItemIDs: components["parameters"]["fromItemIDs"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       449911716
                 *     ] */
                toItemIDs: components["parameters"]["toItemIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_move_item: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       449911890,
                 *       449911890,
                 *       449911888,
                 *       449911890,
                 *       449911888,
                 *       449911889
                 *     ] */
                itemIDs: components["parameters"]["itemIDs"];
                /** @example [
                 *       0,
                 *       2
                 *     ] */
                itemLocationIDs: components["parameters"]["itemLocationIDs"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       -1,
                 *       -1
                 *     ] */
                posIDs: components["parameters"]["posIDs"];
                /** @example [
                 *       -1,
                 *       -1
                 *     ] */
                slotIDs: components["parameters"]["slotIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_open_item_pack: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [] */
                choices: components["parameters"]["choices"];
                /** @example 449956852 */
                itemInstance_id: components["parameters"]["itemInstance_id"];
                /** @example 0 */
                itemLocation_id: components["parameters"]["itemLocation_id"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_sign_item: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 3611078805 */
                crc: components["parameters"]["crc"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_item_update_item_attributes: {
        parameters: {
            query: {
                /** @example [
                 *       [
                 *         "is_new"
                 *       ]
                 *     ] */
                attributeKeys: components["parameters"]["attributeKeys"];
                /** @example [
                 *       [
                 *         "0"
                 *       ]
                 *     ] */
                attributeValues: components["parameters"]["attributeValues"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       449911889
                 *     ] */
                itemInstance_ids: components["parameters"]["itemInstance_ids"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       0
                 *     ] */
                xpGains: components["parameters"]["xpGains"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_recent_match_history_get: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_recent_match_history_post: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_available_leaderboards: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_leaderboard: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 3 */
                leaderboard_id?: components["parameters"]["leaderboard_id"];
                /** @example 0 */
                start: components["parameters"]["start"];
                /** @example 1 */
                sortBy?: components["parameters"]["sortBy"];
                /** @example 200 */
                count: components["parameters"]["count"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_party_stat: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       1,
                 *       2
                 *     ] */
                statsids: components["parameters"]["statsids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_personal_stat: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_recent_match_single_player_history: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_stat_groups_by_profile_ids: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       2132331,
                 *       31323213
                 *     ] */
                profileids: components["parameters"]["profileids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_get_stats_for_leaderboard_by_profile_name: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 3 */
                leaderboard_id?: components["parameters"]["leaderboard_id"];
                /** @example [
                 *       2132331,
                 *       31323213
                 *     ] */
                profileids: components["parameters"]["profileids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_leaderboard_set_avatar_stat_values: {
        parameters: {
            query: {
                /** @example [
                 *       156
                 *     ] */
                avatarStat_ids: components["parameters"]["avatarStat_ids"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       2
                 *     ] */
                updateTypes: components["parameters"]["updateTypes"];
                /** @example [
                 *       687
                 *     ] */
                values: components["parameters"]["values"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_login_logout: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_login_read_session: {
        parameters: {
            query: {
                /** @example 0 */
                ack: components["parameters"]["ack"];
                /** @example 0 */
                pollNum: components["parameters"]["pollNum"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_login_platform_login: {
        parameters: {
            query: {
                /** @example STEAM */
                accountType: components["parameters"]["accountType"];
                /** @example -1 */
                activeMatchId: components["parameters"]["activeMatchId"];
                /** @example Name */
                alias: components["parameters"]["alias"];
                /** @example 1466860 */
                appID: components["parameters"]["appID"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 176 */
                clientLibVersion: components["parameters"]["clientLibVersion"];
                /** @example bgoo2n1murnn43kzdnnfc9fhp2no19 */
                connect_id: components["parameters"]["connect_id"];
                /** @example [
                 *       "US",
                 *       "DE"
                 *     ] */
                country: components["parameters"]["country"];
                /** @example windows */
                installationType: components["parameters"]["installationType"];
                /** @example [
                 *       "en",
                 *       "de",
                 *       "es",
                 *       "fr"
                 *     ] */
                language?: components["parameters"]["language"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example D4-BA-A1-43-29-19 */
                macAddress: components["parameters"]["macAddress"];
                /** @example 4.0.0 */
                majorVersion: components["parameters"]["majorVersion"];
                /** @example 24916 */
                minorVersion: components["parameters"]["minorVersion"];
                /** @example 765613333337299 */
                platformUserID: components["parameters"]["platformUserID"];
                /** @example null */
                startGameToken: components["parameters"]["startGameToken"];
                /** @example null */
                storeLicenseToken?: components["parameters"]["storeLicenseToken"];
                /** @example [
                 *       0,
                 *       0
                 *     ] */
                syncHash: components["parameters"]["syncHash"];
                /** @example 0 */
                timeoutOverride: components["parameters"]["timeoutOverride"];
                /** @example [
                 *       "age1",
                 *       "age2",
                 *       "age3",
                 *       "age4"
                 *     ] */
                title?: components["parameters"]["title"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_news_get_news: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_party_create_or_report_single_player: {
        parameters: {
            query: {
                /** @example 24916 */
                appbincrc: components["parameters"]["appbincrc"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /**
                 * @description zlib-compressed
                 * @example H4sIAAAAAAAACouOBQApu0wNAgAAAA==
                 */
                countersZip: components["parameters"]["countersZip"];
                /** @example 1 */
                createMatchKey: components["parameters"]["createMatchKey"];
                /**
                 * @description backwards appBinCRC?
                 * @example -638535971
                 */
                datacrc: components["parameters"]["datacrc"];
                /** @example 0 */
                isComplete: components["parameters"]["isComplete"];
                /** @example [] */
                itemUpdates: components["parameters"]["itemUpdates"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example [
                 *       "no_map",
                 *       "ang_chp1_hastings"
                 *     ] */
                mapname: components["parameters"]["mapname"];
                /** @example null */
                matchKey: components["parameters"]["matchKey"];
                /** @example 17 */
                matchTypeID: components["parameters"]["matchTypeID"];
                /** @example 0 */
                modDLLChecksum: components["parameters"]["modDLLChecksum"];
                /** @example INVALID */
                modDLLFile: components["parameters"]["modDLLFile"];
                /** @example INVALID */
                modName: components["parameters"]["modName"];
                /** @example INVALID */
                modVersion: components["parameters"]["modVersion"];
                /** @example opts */
                options: components["parameters"]["options"];
                /** @example [
                 *       1,
                 *       2
                 *     ] */
                race_ids: components["parameters"]["race_ids"];
                /** @example [] */
                results: components["parameters"]["results"];
                /**
                 * @description zlib-compressed
                 * @example eNrtVltvo0YU7m/xc7aCwSRLpH0wdgZj2Thg7lUfGMDiMmAaMDau+t97BpzEmzRdrdqXSH5AzJwznDmX7/tsHt389ueoetptUxqr5Xb3axqN7pEwvhXGN6O6CZp0V6qz0T1/M2rioGBL7ma0DcJnB+yegjBmS4T4u/GY7ct8GbcxPXvLfBU0YWJ2VX/sC4uVFvFj/ISfgiJebfpzaW3EQdT1a3bxvu6XRdwEs6AJRvejuFs0LqJ7A+HG36i3q+khJbZUkdKnpDTasKQb38F5/Oo7EAWLvrt4tW96e+c5Yk4Qb0YK7iIstyGiXOBIezXbHZdTuEfQOM9dgE0sLUU6Ba5RETRO1yk3+BHf+lhOPNQ8hnPmE09qVt2pxYud7YnrcjXYtsSRckvBWcD5tedE4Nsd3sQ5WYKRRHO7/w5qTcJCWxhT9VbNjZXmSMslJ/3hc7aroWS/xrTSkH6w+QfpcaPWasnyNfiwG2oP0bGN4Nul+QD3G3syZfbxYTWbwCNL7tCHJLBlGpZaSwpcQ40i5JWq6dlnHVvPMdrI1dN1pndrUxe1LIS31dfkIelEHBt6pL3twTZUMMzFMD2UUDjT13GeXw53cKss59amJ8CbH/ptiKFiwT2yNOzlBHrPWfNFRRzcsdmp6dd22X1toxMnnXM8eA7dR1ijkMveV350zugCh4MZqr1/KYRD717ztfx+5h/GSaEfpW/LEIdPwjJ/E2txzt2gnsPLRDlWgLOMYVXNsaxb8JgvsWC+vKg7UJ/CsDfM/XkuzGe7chkWOPfdVbqmTTTgBXfEpTYpKMdm7fADvnxFWhPB2JxxXcUF6+VD7wtcDewatQoMPZIaMqem7xypB3n60xeu7DxXmxJFygJk57YVzV4wKsi151Ia5oATReLDlOFqIU0m376N/rp5rx+M4Rfa8eVCPPgPxYMTb+++Fw/038QD/f/iMf0c4vFv5PYVu/Bcu46wlAFIGTFKkg4kgPWKIJwTweb+kaRIg1p5Gik0MwW5r5mBsO/tM2GRtvMdnm4sEI2y7nvMQKbNVFGb5Ug7wXvIj4tdmbJatptLkn5Eru+ICgBmdRk/OmeFBW1Y3b2/k4RHk0svBcZW7A7q+TCOxwiIbJ3FgZmKb2Odc+cAI43uHGsQj72HgHzpQrYY4a2H11juooktnAbOsYI76SWBe59tH3xhkcCM3ouBI1bR/FIIjNYsJO6Z1IFb0Rf8IXoCe+bbiwR61BLnKFrIrqFnkCcT8
                 */
                slotInfo: components["parameters"]["slotInfo"];
                /** @example [] */
                teamIDs: components["parameters"]["teamIDs"];
                /** @example 0 */
                versionFlags: components["parameters"]["versionFlags"];
                /** @example [
                 *       0
                 *     ] */
                xpGained: components["parameters"]["xpGained"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_party_report_match: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       0,
                 *       0
                 *     ] */
                checkSums: components["parameters"]["checkSums"];
                /**
                 * @description zlib-compressed
                 * @example H4sIAAAAAAAACouOBQApu0wNAgAAAA==
                 */
                countersZip: components["parameters"]["countersZip"];
                /** @example [] */
                itemUpdates: components["parameters"]["itemUpdates"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 186444398 */
                match_id: components["parameters"]["match_id"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
                /** @example [
                 *       1,
                 *       2
                 *     ] */
                race_ids: components["parameters"]["race_ids"];
                /** @example [] */
                results: components["parameters"]["results"];
                /** @example [
                 *       1,
                 *       7
                 *     ] */
                simplayerIDs: components["parameters"]["simplayerIDs"];
                /** @example [] */
                teamIDs: components["parameters"]["teamIDs"];
                /** @example [
                 *       0
                 *     ] */
                xpGained: components["parameters"]["xpGained"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_playerreport_report_user: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example misclick */
                comment: components["parameters"]["comment"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example {
                 *       "location": 4,
                 *       "clanTag": "KAOS",
                 *       "clanName": "KAOS"
                 *     } */
                metadata: components["parameters"]["metadata"];
                /**
                 * @description 7=all reasons
                 * @example 7
                 */
                reportReason: components["parameters"]["reportReason"];
                /** @example null */
                reportType: components["parameters"]["reportType"];
                /** @example 209072 */
                reportee_profile_id: components["parameters"]["reportee_profile_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_party_send_match_chat: {
        parameters: {
            query: {
                /**
                 * @description aoe4: 1, aoe2de: 0
                 * @example [
                 *       0,
                 *       1
                 *     ]
                 */
                broadcast: components["parameters"]["broadcast"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 0 */
                from_profile_id: components["parameters"]["from_profile_id"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 186444398 */
                match_id: components["parameters"]["match_id"];
                /** @example 0*gg */
                message: components["parameters"]["message"];
                /** @example 0 */
                messageTypeID: components["parameters"]["messageTypeID"];
                /** @example 0 */
                to_profile_id: components["parameters"]["to_profile_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_party_finalize_replay_upload: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [] */
                errorString: components["parameters"]["errorString"];
                /** @example 1 */
                finalizeResult: components["parameters"]["finalizeResult"];
                /** @example [
                 *       0,
                 *       1
                 *     ] */
                isSinglePlayer: components["parameters"]["isSinglePlayer"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 186444398 */
                match_id: components["parameters"]["match_id"];
                /** @example 340242 */
                size: components["parameters"]["size"];
                /** @example https://rl0aoelivemk2blob.blob.core.windows.net/cloudfiles/436432/aoelive_/age2/replay/windows/4.0.0/0/M_186444398_8b31ed6602350cce7ee1736393cab532712c579e545fdd41995117491b1ae319.gz */
                url: components["parameters"]["url"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_party_peer_add: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 186444398 */
                match_id: components["parameters"]["match_id"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
                /** @example [
                 *       1,
                 *       2
                 *     ] */
                race_ids: components["parameters"]["race_ids"];
                /** @example [
                 *       12,
                 *       34
                 *     ] */
                statGroup_ids: components["parameters"]["statGroup_ids"];
                /** @example [] */
                teamIDs: components["parameters"]["teamIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_party_peer_update: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example [
                 *       0,
                 *       0
                 *     ] */
                isNonParticipants: components["parameters"]["isNonParticipants"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 186444398 */
                match_id: components["parameters"]["match_id"];
                /** @example [
                 *       196240
                 *     ] */
                profile_ids: components["parameters"]["profile_ids"];
                /** @example [
                 *       1,
                 *       2
                 *     ] */
                race_ids: components["parameters"]["race_ids"];
                /** @example [] */
                teamIDs: components["parameters"]["teamIDs"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_relationship_get_presence_data: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_relationship_get_relationships: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_relationship_clear_relationship: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /**
                 * @description 1=Unban, 2=Unmute
                 * @example [
                 *       1,
                 *       2
                 *     ]
                 */
                relationType: components["parameters"]["relationType"];
                /** @example 4994658 */
                targetProfileID: components["parameters"]["targetProfileID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_relationship_ignore: {
        parameters: {
            query: {
                /**
                 * @description 1=lobby ban, 2=mute
                 * @example [
                 *       1,
                 *       2
                 *     ]
                 */
                blocklevel: components["parameters"]["blocklevel"];
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /**
                 * @description 1=Unban, 2=Unmute
                 * @example [
                 *       1,
                 *       2
                 *     ]
                 */
                relationType: components["parameters"]["relationType"];
                /** @example 4994658 */
                targetProfileID: components["parameters"]["targetProfileID"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_relationship_set_presence: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 3 */
                presence_id: components["parameters"]["presence_id"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
    game_relationship_set_presence_property: {
        parameters: {
            query: {
                /** @example 148 */
                callNum: components["parameters"]["callNum"];
                /** @example 918824 */
                lastCallTime: components["parameters"]["lastCallTime"];
                /** @example 1409823 */
                presencePropertyDef_id: components["parameters"]["presencePropertyDef_id"];
                /** @example -2 */
                value: components["parameters"]["propertyValue"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: components["responses"]["AnyJSONValue"];
        };
    };
}
